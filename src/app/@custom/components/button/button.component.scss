$color-pink: #ffe600;
$color-resolve: #56b661;
$color-reject: #fe3d3e;
$color-white: #ffffff;
$color-black: #000000;
$color-gray-3: #d5d5d5;
$transition-time: 0.1s;

@mixin buttonRole($firstColor, $secondsColor, $defaultColor, $hoverColor: $firstColor, $opacity: 1) {
  &__default {
    border-color: $secondsColor;
    opacity: $opacity;
    &:not(.button-loading) {
      background-color: transparent;
      color: $defaultColor;
    }
    &:not(.button-loading):not(:disabled) {
      &:hover {
        opacity: 1;
        background-color: $hoverColor;
        color: $color-black;
        border-color: $hoverColor;
        & > custom-svg-icon ::ng-deep svg {
          & path {
            fill: $color-black;
          }
        }
      }
      &:active {
        opacity: 0.90;
      }
    }

    &:not(.button-loading):disabled {
      border-color: var(--color-button--disabled);
      color: var(--color-font--disabled);
    }

    &.button-loading {
      &:after {
        background-color: $defaultColor;
      }
    }

    & > custom-svg-icon ::ng-deep svg {
      & path {
        fill: $defaultColor;
      }
    }
  }
  &__accept {
    background-color: $firstColor;
    &:not(.button-loading) {
      color: $secondsColor;
    }
    &:not(.button-loading):not(:disabled) {
      &:hover {
        opacity: 0.85;
      }
      &:active {
        opacity: 0.9;
      }
    }

    &:not(.button-loading):disabled {
      background-color: var(--color-button--disabled);
      color: var(--color-button-text--disabled);
    }

    &.button-loading {
      &:after {
        background-color: $secondsColor;
      }
    }

    & > custom-svg-icon ::ng-deep svg {
      & path {
        fill: $secondsColor;
      }
    }
  }
}


:host {
  .button {
    border: none;
    display: inline-flex;
    justify-content: center;
    align-items: center;
    background-color: transparent;
    box-shadow: none;
    box-sizing: border-box;
    position: relative;

    font-size: 14px;
    line-height: 20px;
    font-weight: 600;

    cursor: pointer;

    &:focus {
      outline: none !important;
    }

    &.button-shape {
      &__rectangle {
        border-radius: 4px;
      }
      &__circle {
        border-radius: 100%;

        &.button-size {
          &__large {
            padding: 0;
            width: 40px;
          }
          &__small {
            padding: 0;
            width: 28px;
          }
        }
      }
      &__ellipse {
        &.button-size {
          &__large {
            border-radius: 40px;
          }
          &__small {
            border-radius: 28px;
          }
        }
      }
    }

    &.button-role {
      &__default {
        border-width: 2px;
        border-style: solid;

        transition: color $transition-time linear, background-color $transition-time linear,
          border-color $transition-time linear;

        will-change: color, background-color, border-color;
      }

      &__accept {
        border: none;
        opacity: 1;

        transition: opacity $transition-time linear;
        will-change: opacity;
      }

      &__transparent {
        border: 2px $color-white solid;

        background-color: transparent;
        color: $color-white;

        transition: color $transition-time linear, background-color $transition-time linear,
          border-color $transition-time linear;

        will-change: color, background-color, border-color;
        &:not(.button-loading):not(:disabled) {
          &:hover {
            background-color: $color-pink;
            color: $color-white;
            border-color: $color-pink;
          }
          &:active {
            opacity: 0.95;
          }
        }


        &.button-loading {
          &:after {
            background-color: $color-white;
          }
        }

        &:not(.button-loading):disabled {
          border-color: $color-gray-3;
          background-color: transparent;
          color: $color-gray-3;
        }
      }
    }

    &.button-color {
      &__main {
        &.button-role {
          @include buttonRole($color-pink, $color-black, $color-black, var(--color-button--hover), var(--color-button-opacity))
        }
      }
      &__resolve {
        &.button-role {
          @include buttonRole($color-resolve, $color-white, $color-resolve)
        }
      }
      &__reject {
        &.button-role {
          @include buttonRole($color-reject, $color-white, $color-reject)
        }
      }
      &__white {
        &.button-role {
          @include buttonRole($color-white, $color-black, $color-white)
        }
      }
    }

    &.button-size {
      &__large {
        text-transform: uppercase;
        height: 40px;
        padding: 0 24px;
        &.button-loading {
          background-size: 24px;
        }
      }

      &__middle {
        height: 36px;
        padding: 0 20px;
      }

      &__small {
        height: 28px;
        padding: 0 10px;
        text-transform: none;
        &.button-loading {
          background-size: 20px;
        }
      }
    }


    &:not(.button-loading):disabled {
      cursor: not-allowed;
    }

    &.button-loading {
      color: transparent;
      cursor: wait;
      &:after {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        width: 24px;
        height: 24px;
        transform: translate(-50%, -50%);
        mask: url(./icons/button-loader.svg) no-repeat 50% 50%;
        mask-size: contain;
      }
      & custom-svg-icon ::ng-deep svg {
        visibility: hidden;
      }
    }

    &.button-icon {
      padding: 0;
      &.button-size {
        &__large {
          width: 40px;
          & custom-svg-icon ::ng-deep svg {
            width: 24px !important;
            height: 24px !important;
          }
        }
        &__middle {
          width: 36px;
          & custom-svg-icon ::ng-deep svg {
            width: 20px !important;
            height: 20px !important;
          }
        }
        &__small {
          width: 28px;
          & custom-svg-icon ::ng-deep svg {
            width: 20px !important;
            height: 20px !important;
          }
        }
      }
      &.button-role {
        &:disabled > custom-svg-icon ::ng-deep svg {
          & path {
            fill: var(--color-font--disabled);
          }
        }
      }
    }
  }
}
